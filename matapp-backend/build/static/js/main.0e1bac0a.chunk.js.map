{"version":3,"sources":["services/fooditem.js","reducers/fooditemReducer.js","reducers/activeRecipeReducer.js","components/IngredientForm.js","services/recipes.js","reducers/recipeReducer.js","components/RecipeList.js","utils/ingredientCalc.js","components/Ingredient.js","components/Recipe.js","App.js","store.js","index.js"],"names":["baseUrl","fooditemService","getAll","console","log","axios","get","createFooditem","newFooditem","post","updateFooditem","id","changedFooditem","put","deleteFooditem","delete","fooditemReducer","state","action","type","data","concat","setActiveRecipe","recipe","updateIngredientAmount","ingredientId","newAmount","activeRecipeReducer","newIngredient","ingredientsArray","ingredients","ingredientToUpdate","find","ingredient","updatedIngredient","amount","newIngredientList","map","IngredientForm","fooditems","useSelector","dispatch","useDispatch","options","fooditem","value","label","name","onSubmit","event","preventDefault","target","fooditemId","amountUnit","Math","floor","random","window","alert","option","recipeService","getRecipe","createRecipe","newRecipe","updateRecipe","changedRecipe","deleteRecipe","addRecipe","recipeReducer","selectedRecipe","RecipeList","recipes","history","useHistory","handleCloneRecipe","a","recipeWithoutId","template","today","Date","toLocaleDateString","title","response","push","onClick","handleShowRecipe","ingredientCalc","caloriesIn","fat","protein","carbohydrate","calcTotalCalOf","reduce","totalCal","calcTotalCarbsOf","totalCarbs","calcTotalFatOf","totalFat","calcTotalProteinOf","totalProtein","Ingredient","updateAmount","useState","editMode","setEditMode","setAmount","sliderValue","setSliderValue","style","width","size","onChange","currentAmount","increaseAmountByOne","decreaseAmountByOne","min","max","Recipe","activeRecipe","useParams","useEffect","savedRecipeJSON","localStorage","getItem","JSON","parse","decodedSave","then","length","item","localSave","saveObject","setItem","stringify","saveToBackend","tempIngredients","strippedIngredients","recipeToSave","removeItem","App","Headers","className","to","path","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e1bac0a.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3003/api/fooditems'\r\nconst baseUrl = '/api/fooditems'\r\n\r\n\r\nconst getAll = () => {\r\n  console.log('getting all?')\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst createFooditem = (newFooditem) => {\r\n  return axios.post(baseUrl, newFooditem)\r\n}\r\n\r\nconst updateFooditem = (id, changedFooditem) => {\r\n  return axios.put(`${baseUrl}/${id}`, changedFooditem)\r\n}\r\n\r\nconst deleteFooditem = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst fooditemService = {\r\n  getAll,\r\n  createFooditem,\r\n  updateFooditem,\r\n  deleteFooditem\r\n\r\n}\r\n\r\nexport default fooditemService","import fooditemService from '../services/fooditem'\r\n\r\nexport const initFooditems = (fooditemList) => {\r\n  return {\r\n    type: 'INIT_FOODITEMS',\r\n    data: fooditemList\r\n  }\r\n}\r\n\r\nexport const addFooditem = (fooditem) => {\r\n  return async dispatch => {\r\n    const createdItem = await fooditemService.createFooditem(fooditem)\r\n    console.log('DB created fooditem: ', createdItem.data)\r\n    await dispatch({\r\n      type: 'ADD_FOODITEM',\r\n      data: createdItem.data\r\n    })\r\n  }\r\n}\r\n\r\nconst fooditemReducer = (state = [], action) => {\r\n  switch (action.type){\r\n  case 'INIT_FOODITEMS':\r\n    return action.data\r\n  case 'ADD_FOODITEM':\r\n    return state.concat(action.data)\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default fooditemReducer","const generateId = () => {\r\n  return Math.floor(Math.random() * 10000)\r\n}\r\n\r\n\r\nexport const setActiveRecipe = (recipe) => {\r\n  //Recieve a whole recipe.\r\n  return {\r\n    type: 'SET_RECIPE',\r\n    data: recipe\r\n  }\r\n}\r\n\r\nexport const addIngredientToRecipe = (ingredient) => {\r\n  console.log('Ingredient: ', ingredient)\r\n  return {\r\n    type: 'ADD_INGREDIENT',\r\n    data: {\r\n      ...ingredient,\r\n      id: generateId()\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateIngredientAmount = (ingredientId, newAmount) => {\r\n  return {\r\n    type: 'UPDATE_INGREDIENT_AMOUNT',\r\n    data: {\r\n      ingredientId,\r\n      newAmount\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst activeRecipeReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'SET_RECIPE':{\r\n    return action.data\r\n  }\r\n  case 'ADD_INGREDIENT':{\r\n    const newIngredient = action.data\r\n    const ingredientsArray = state.ingredients.concat(newIngredient)\r\n    return { ...state, ingredients: ingredientsArray }\r\n  }\r\n  case 'UPDATE_INGREDIENT_AMOUNT': {\r\n    const ingredientToUpdate = state.ingredients.find((ingredient) => ingredient.id === action.data.ingredientId)\r\n    const updatedIngredient = {\r\n      ...ingredientToUpdate,\r\n      amount: action.data.newAmount\r\n    }\r\n    const newIngredientList = state.ingredients.map((ingredient) => ingredient.id !== updatedIngredient.id ? ingredient : updatedIngredient)\r\n    //console.log('New state:', { ...state, ingredients: newIngredientList } )\r\n    return { ...state, ingredients: newIngredientList }\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default activeRecipeReducer","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addIngredientToRecipe } from '../reducers/activeRecipeReducer'\r\n\r\nconst IngredientForm = () => {\r\n  const fooditems = useSelector(state => state.fooditems)\r\n  const dispatch = useDispatch()\r\n\r\n  //GOing to need access to food Items\r\n  //and callback function to create Ingredient\r\n\r\n  const addIngredient = (event) => {\r\n    event.preventDefault()\r\n    if(!event.target.fooditem.value) {window.alert('Please select a food from the menu')\r\n      return\r\n    }\r\n    //setErrorNotification\r\n    //console.log('fooditem: ', event.target.fooditem.value)\r\n    const newIngredient = {\r\n      fooditemId: event.target.fooditem.value,\r\n      amount: event.target.amount.value,\r\n      amountUnit: event.target.amountUnit.value,\r\n    }\r\n    event.target.amount.value = ''\r\n    event.target.amountUnit.value = 'g'\r\n    console.log('new ingredient', newIngredient)\r\n\r\n    dispatch(addIngredientToRecipe(newIngredient))\r\n  }\r\n  const options = fooditems.map((fooditem) => {\r\n    return { value: fooditem.id, label: fooditem.name }\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Ingredient</h2>\r\n      <form onSubmit={addIngredient}>\r\n        <table><tbody>\r\n          <tr>\r\n            <td>Food Name</td><td>\r\n              <select name='fooditem' >\r\n                {options.map((option) =>\r\n                  <option key={option.value} value={option.value}>{option.label}</option>\r\n                )}\r\n              </select>\r\n            </td>\r\n\r\n            <td>Amount</td><td><input name='amount'  />\r\n          Unit\r\n              <select name='amountUnit' >\r\n                <option value='g'>gram (g)</option>\r\n                <option value='ml'>milliliter (ml)</option>\r\n                <option value='tbsp'>tablespoon (tbsp)</option>\r\n                <option value='tsp'>teaspoon (tsp)</option>\r\n              </select></td>\r\n          </tr>\r\n        </tbody></table>\r\n        <button type='submit'>Add Ingredient to recipe</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IngredientForm","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3003/api/recipes'\r\nconst baseUrl = '/api/recipes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst getRecipe = (id) => {\r\n  console.log('getting local recipe')\r\n  return axios.get(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst createRecipe = (newRecipe) => {\r\n  return axios.post(baseUrl, newRecipe)\r\n}\r\n\r\nconst updateRecipe = (changedRecipe) => {\r\n  return axios.put(`${baseUrl}/${changedRecipe.id}`, changedRecipe)\r\n}\r\n\r\nconst deleteRecipe = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst recipeService = {\r\n  getAll,\r\n  getRecipe,\r\n  createRecipe,\r\n  updateRecipe,\r\n  deleteRecipe\r\n}\r\n\r\nexport default recipeService","//NO async with thunk yet\r\n//import recipeService from '../services/recipes'\r\n\r\nexport const initRecipes = (recipeList) => {\r\n\r\n  return {\r\n    type: 'INIT_RECIPES',\r\n    data: recipeList\r\n  }\r\n}\r\n\r\nexport const updateRecipe = (recipe) => {\r\n  return {\r\n    type: 'UPDATE_RECIPE',\r\n    data: recipe\r\n  }\r\n}\r\n\r\nexport const addRecipe = (recipe) => {\r\n  return {\r\n    type: 'ADD_RECIPE',\r\n    data: recipe\r\n  }\r\n}\r\n\r\nconst recipeReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_RECIPES':\r\n    return action.data\r\n  case 'ADD_RECIPE':\r\n    return state.concat(action.data)\r\n  case 'UPDATE_RECIPE':{\r\n    const selectedRecipe = state.find(recipe => recipe.id === action.data.id)\r\n    console.log('Updated recipe ', selectedRecipe )\r\n    return state.map(recipe => recipe.id !== action.data.id ? recipe : action.data)\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default recipeReducer","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setActiveRecipe } from '../reducers/activeRecipeReducer'\r\nimport { useHistory } from 'react-router'\r\nimport recipeService from '../services/recipes'\r\nimport { addRecipe } from '../reducers/recipeReducer'\r\n\r\nconst RecipeList = () => {\r\n  const recipes = useSelector(state => state.recipes)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleShowRecipe = (recipe) => {\r\n    console.log('handled show recipe')\r\n    dispatch(setActiveRecipe(recipe))\r\n    history.push(`/recipe/${recipe.id}`)\r\n  }\r\n\r\n  const handleCloneRecipe = async (recipe) => {\r\n\r\n    let { id, ...recipeWithoutId } = recipe\r\n    console.log('WithoutID?', recipeWithoutId)\r\n    recipeWithoutId = { ...recipeWithoutId, template: false }\r\n\r\n    const today = (new Date()).toLocaleDateString('no-no')\r\n    recipeWithoutId.title = `${recipeWithoutId.title} - ${today}`\r\n    console.log(recipeWithoutId.name)\r\n    const response = await recipeService.createRecipe(recipeWithoutId)\r\n    dispatch(addRecipe(response.data))\r\n    history.push(`/recipe/${response.data.id}`)\r\n  }\r\n\r\n  return(\r\n    <ul>\r\n      {recipes.map((recipe) =>\r\n        <li key={recipe.id}>{recipe.title}\r\n          {recipe.template ?\r\n            <button onClick={() => handleCloneRecipe(recipe)}>Make a copy and edit</button>\r\n            :\r\n            <button onClick={() => handleShowRecipe(recipe)}>Set Active</button>\r\n          }\r\n        </li>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default RecipeList","const caloriesIn = (ingredient) => {\r\n  console.log('IngredientCalc - ingredient:', ingredient)\r\n  const calInFat = 9\r\n  const calInProtein = 4\r\n  const calInCarb = 4\r\n  const calPer100 = calInFat * ingredient.fooditem.fat + calInProtein * ingredient.fooditem.protein + calInCarb * ingredient.fooditem.carbohydrate\r\n  const totalCal = calPer100 * ingredient.amount / 100\r\n  return totalCal\r\n}\r\n\r\nconst calcTotalCalOf = (ingredients) => {\r\n  const totalCal = ingredients.reduce((totalCal, ingredient) => {\r\n    return totalCal + ingredientCalc.caloriesIn(ingredient)\r\n  }, 0)\r\n  return totalCal\r\n}\r\n\r\nconst calcTotalFatOf = (ingredients) => {\r\n  const totalFat = ingredients.reduce((totalFat, ingredient) => {\r\n    return totalFat + ingredient.fooditem.fat * ingredient.amount / 100\r\n  }, 0)\r\n  return totalFat\r\n}\r\n\r\nconst calcTotalProteinOf = (ingredients) => {\r\n  const totalProtein = ingredients.reduce((totalProtein, ingredient) => {\r\n    return totalProtein + ingredient.fooditem.protein * ingredient.amount / 100\r\n  }, 0)\r\n  return totalProtein\r\n}\r\n\r\nconst calcTotalCarbsOf = (ingredients) => {\r\n  const totalCarbs = ingredients.reduce((totalCarbs, ingredient) => {\r\n    return totalCarbs + ingredient.fooditem.carbohydrate * ingredient.amount / 100\r\n  }, 0)\r\n  return totalCarbs\r\n}\r\n\r\nconst ingredientCalc = {\r\n  caloriesIn,\r\n  calcTotalCalOf,\r\n  calcTotalCarbsOf,\r\n  calcTotalFatOf,\r\n  calcTotalProteinOf\r\n}\r\n\r\nexport default ingredientCalc","import React from 'react'\r\nimport '../index.css'\r\nimport { useState } from 'react'\r\nimport { updateIngredientAmount } from '../reducers/activeRecipeReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Ingredient = ({ ingredient, updateAmount }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [amount, setAmount] = useState(ingredient.amount)\r\n  const [sliderValue, setSliderValue] = useState(ingredient.amount)\r\n\r\n  const increaseAmountByOne = () => {\r\n    const currentAmount = amount\r\n    setAmount(currentAmount + 1)\r\n    setSliderValue(currentAmount + 1)\r\n    dispatch(updateIngredientAmount(ingredient.id, currentAmount + 1))\r\n  }\r\n  const decreaseAmountByOne = () => {\r\n    if(amount > 0) {\r\n      const currentAmount = amount\r\n      setAmount(currentAmount - 1)\r\n      setSliderValue(currentAmount - 1)\r\n      dispatch(updateIngredientAmount(ingredient.id, currentAmount - 1))\r\n    }\r\n  }\r\n\r\n  const handleSliderAmount = (event) => {\r\n    setAmount(event.target.value)\r\n    setSliderValue(event.target.value)\r\n    dispatch(updateIngredientAmount(ingredient.id, event.target.value))\r\n  }\r\n\r\n  const handleAmountUpdate = (value) => {\r\n    setAmount(value)\r\n    setSliderValue(value)\r\n    dispatch(updateIngredientAmount(ingredient.id, value))\r\n  }\r\n\r\n  if(!editMode) return (\r\n    <tr onClick={() => setEditMode(!editMode)}>\r\n      <td style={{ width: 100 }}>{ingredient.fooditem.name}</td>\r\n      <td style={{ width: 120 }}>{ingredient.amount} {ingredient.amountUnit}</td>\r\n      <td></td>\r\n    </tr>\r\n  )\r\n  else return (\r\n    <tr>\r\n      <td style={{ width: 100 }} onClick={() => setEditMode(!editMode)}>{ingredient.fooditem.name}</td>\r\n      <td><input value={amount} size='10' onChange={({ target }) => handleAmountUpdate(target.value)} />{ingredient.amountUnit}</td>\r\n      <td>\r\n        <button onClick={() => increaseAmountByOne()}>Increase</button>\r\n        <button onClick={() => decreaseAmountByOne()}>Decrease</button>\r\n        <input value={sliderValue} type='range' min='0' max='1000' onChange={handleSliderAmount}></input>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\nexport default Ingredient","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport ingredientCalc from '../utils/ingredientCalc'\r\nimport Ingredient from './Ingredient'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useParams, useHistory } from 'react-router'\r\nimport { setActiveRecipe } from '../reducers/activeRecipeReducer'\r\nimport recipeService from '../services/recipes'\r\n\r\nconst Recipe = () => {\r\n  const activeRecipe = useSelector(state => state.activeRecipe)\r\n  const fooditems = useSelector(state => state.fooditems)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  let ingredients = null\r\n  const id = useParams().id\r\n  useEffect(() => {\r\n    //check if local saved recipe\r\n    const savedRecipeJSON = window.localStorage.getItem(`savedRecipe${id}`)\r\n    if (savedRecipeJSON) {\r\n      console.log('found save:', JSON.parse(savedRecipeJSON))\r\n      const decodedSave = JSON.parse(savedRecipeJSON)\r\n      console.log(decodedSave)\r\n      dispatch(setActiveRecipe(decodedSave.activeRecipe))\r\n      //ingredients = decodedSave.ingredients\r\n    } else {\r\n      //get from the backend\r\n      recipeService\r\n        .getRecipe(id)\r\n        .then(response => {\r\n          dispatch(setActiveRecipe(response.data))\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  if(!activeRecipe) return <p>Waiting for activeRecipe to be set</p>\r\n  if(fooditems.length === 0) return <p>Waiting for foodItems</p>\r\n  console.log('Fooditems currently: ', fooditems)\r\n  if(!ingredients) {\r\n    ingredients = activeRecipe.ingredients.map(ingredient => {\r\n      const fooditem = fooditems.find(item => item.id === ingredient.fooditemId)\r\n      console.log('found fooditem' ,fooditem)\r\n      ingredient.fooditem = fooditem\r\n      return ingredient\r\n    })\r\n  }\r\n  console.log('ingredients:',ingredients)\r\n\r\n  const updateIngredientAmount = (ingredientId, amount) => {\r\n    console.log('Want to save these changes: ', ingredientId, amount)\r\n    //first find ingredient to update\r\n    //Need a callback to App.\r\n  }\r\n  console.log('ingredients', ingredients)\r\n\r\n  const localSave = () => {\r\n    const saveObject = {\r\n      activeRecipe: activeRecipe,\r\n      ingredients: ingredients\r\n    }\r\n    console.log('saving following ingredients:', ingredients)\r\n    window.localStorage.setItem(`savedRecipe${id}`, JSON.stringify(saveObject))\r\n  }\r\n  const cancelAndReturn = () => {\r\n    window.localStorage.removeItem(`savedRecipe${id}`)\r\n    history.push('/')\r\n\r\n  }\r\n\r\n  const saveToBackend = async () => {\r\n    localSave()\r\n    const tempIngredients = activeRecipe.ingredients\r\n    const strippedIngredients = tempIngredients.map(ingredient => {\r\n      delete ingredient.fooditem\r\n      return ingredient\r\n    })\r\n    const recipeToSave = { ...activeRecipe, ingredients: strippedIngredients }\r\n    const response = await recipeService.updateRecipe(recipeToSave)\r\n    dispatch(setActiveRecipe(response.data))\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>{activeRecipe.title}</h1>\r\n      <button onClick={localSave}>Save changes locally</button>\r\n      <button onClick={cancelAndReturn}>Discard changes and return</button>\r\n      <button onClick={saveToBackend}>Save to server</button>\r\n      <h2>Ingredients</h2>\r\n      <table><tbody>\r\n        {ingredients.map((ingredient) =>\r\n          <Ingredient key={ingredient.id} ingredient={ingredient} updateAmount={updateIngredientAmount}/>\r\n        )}\r\n      </tbody></table>\r\n      <h2>Nutritional information</h2>\r\n      <table>\r\n        <thead><tr><td>Total calories</td><td>Total protein</td><td>Total carbs</td><td>Total fat</td></tr></thead>\r\n        <tbody><tr>\r\n          <td>{ingredientCalc.calcTotalCalOf(ingredients)}</td>\r\n          <td>{ingredientCalc.calcTotalProteinOf(ingredients)}</td>\r\n          <td>{ingredientCalc.calcTotalCarbsOf(ingredients)}</td>\r\n          <td>{ingredientCalc.calcTotalFatOf(ingredients)}</td></tr></tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Recipe","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport FooditemForm from './components/FooditemForm'\r\nimport IngredientForm from './components/IngredientForm'\r\nimport RecipeList from './components/RecipeList'\r\nimport Recipe from './components/Recipe'\r\nimport { useEffect } from 'react'\r\nimport './index.css'\r\nimport recipeService from './services/recipes'\r\nimport fooditemService from './services/fooditem'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { initRecipes } from './reducers/recipeReducer'\r\nimport { initFooditems } from './reducers/fooditemReducer'\r\nimport { Switch, Route, Link, Redirect, useRouteMatch, useHistory } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  const fooditems = useSelector(state => state.fooditems)\r\n  const activeRecipe = useSelector(state => state.activeRecipe)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    recipeService\r\n      .getAll()\r\n      .then(response => {\r\n        dispatch(initRecipes(response.data))\r\n      })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    fooditemService\r\n      .getAll()\r\n      .then(response => {\r\n        dispatch(initFooditems(response.data))\r\n      })\r\n  }, [dispatch])\r\n\r\n  const Headers = () => (\r\n    <>\r\n      <div className='header'><h1>Recipe stuff</h1></div>\r\n      <div className='topnav'><Link to='/'>Home</Link></div>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Headers />\r\n      <Switch>\r\n        <Route path='/recipe/:id'>\r\n          <div className='column'>\r\n            <Recipe  />\r\n          </div>\r\n          <div className='column'>\r\n            <IngredientForm />\r\n          </div>\r\n        </Route>\r\n        <Route path='/recipe/'>\r\n          <RecipeList />\r\n        </Route>\r\n        <Route path='/'>\r\n          <RecipeList />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport fooditemReducer from './reducers/fooditemReducer'\r\nimport recipeReducer from './reducers/recipeReducer'\r\nimport activeRecipeReducer from './reducers/activeRecipeReducer'\r\n\r\nconst reducer = combineReducers({\r\n  fooditems: fooditemReducer,\r\n  recipes: recipeReducer,\r\n  activeRecipe: activeRecipeReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store\r\n\r\n\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store} >\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}